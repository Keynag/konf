#COLORSWAY73

#!/bin/sh


#Обои
#wal -q -e --cols16 -i ~/wallpapers && sway reload

wal -q --cols16 -i ~/wallpapers
if command -v wal > /dev/null 2>&1; then
    wal -Rqe
fi

#killall -SIGUSR2 waybar



#--Mako

. "${HOME}/.cache/wal/colors.sh"

conffile="/home/keyn/.config/mako/config"

# Associative array, color name -> color code.
declare -A colors
colors=(
    ["background-color"]="$color8"
    ["text-color"]="$foreground"
    ["border-color"]="$color11"
)

for color_name in "${!colors[@]}"; do
  # replace first occurance of each color in config file
  sed -i "0,/^$color_name.*/{s//$color_name=${colors[$color_name]}/}" $conffile
  #sed -i "s/\(^format=.\{1,10\}color=\"\).\{4,9\}\(\".\{30,60\}color=\"\).\{4,9\}\(\".*\)/\1${color3}\2${color8}\3/" $conffile
done

makoctl reload

#--Alacritty

die() {
  printf "ERR: %s\n" "$1" >&2
  exit 1
}

#Дефолт конфиг
DCONF="$HOME"/.config/alacritty/alacritty.toml

SRC="$HOME"/.cache/wal/colors.sh

[ -e "$SRC" ] || die "Wal colors not found, exiting script. Have you executed Wal before?"
printf "Colors found, source ready.\n"

READLINK=$( command -v greadlink || command -v readlink )

# Get config file
if [ -n "$1" ]; then
  [ -e "$1" ] || die "Selected config doesn't exist, exiting script."
  printf "Config found, destination ready.\n"
  CFG=$1
  [ -L "$1" ] && {
    printf "Following symlink to config...\n"
    CFG=$($READLINK -f "$1")
  }
else
  # Default config path in Mac systems
  [ -e "$DCONF" ] || die "Alacritty config not found, exiting script."

  CFG="$DCONF"
  [ -L "$DCONF" ] && {
    printf "Following symlink to config...\n"
    CFG=$($READLINK -f "$DCONF")
  }
fi

# Get hex colors from Wal cache
# No need for shellcheck to check this, it comes from pywal
# shellcheck disable=SC1090
. "$SRC"

# Create temp file for sed results
tempfile=$(mktemp)
trap 'rm $tempfile' INT TERM EXIT

# Delete existing color declarations generated by this script
# If begin comment exists
if grep -q '^# BEGIN ACE' "$CFG"; then
  # And if end comment exists
  if grep -q '^# END ACE' "$CFG"; then
    # Delete contents of the block
    printf "Existing generated colors found, replacing new colors...\n"
    sed '/^# BEGIN ACE/,/^# END ACE/ {
      /^# BEGIN ACE/! { /^# END ACE/!d; }
    }' "$CFG" > "$tempfile" \
      && cat "$tempfile" > "$CFG"
  # If no end comment, don't do anything
  else
    die "No '# END ACE' comment found, please ensure it is present."
  fi
# If no begin comment found
else
  # Don't do anything and notify user if there's an end comment in the file
  ! grep -q '^# END ACE' "$CFG" || die "Found '# END ACE' comment, but no '# BEGIN ACE' comment found. Please ensure it is present."
  printf "There's no existing 'generated' colors, adding comments...\n";
  printf '# BEGIN ACE\n# END ACE' >> "$CFG";
fi

# Write new color definitions
{ sed "/^# BEGIN ACE/ r /dev/stdin" "$CFG" > "$tempfile" <<EOF
[colors.primary]
background = '$color0'
foreground = '$color7'

[colors.cursor]
text = '$color0'
cursor = '$color7'
  
[colors.normal]
black = '$color0'
red = '$color1'
green = '$color2'
yellow = '$color3'
blue = '$color4'
magenta = '$color5'
cyan = '$color6'
white = '$color7'

[colors.bright]
black = '$color8'
red = '$color9'
green = '$color10'
yellow = '$color11'
blue = '$color12'
magenta = '$color13'
cyan = '$color14'
white = '$color15'
EOF
} && cat "$tempfile" > "$CFG" \
  && rm "$tempfile"
trap - INT TERM EXIT
printf "'%s' exported to '%s'\n" "$SRC" "$CFG"
#--END COLOR ALACRITTY--
